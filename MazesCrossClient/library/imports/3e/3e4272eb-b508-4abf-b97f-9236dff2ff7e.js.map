{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Utils/assets\\Script\\Utils\\Utils.js"],"names":["utils","rootThree","Math","sqrt","offsetToAxial","offsetPt","x","floor","y","axialToScreen","axialPoint","sideLength","tileY","lineWidth","tileX","cc","v2","screenToAxial","screenPoint","cubicZ","calculateCubicZ","round_x","round","round_y","round_z","delta_x","abs","delta_y","delta_z","newAxialPoint","axialToOffset","axialPt","getNeighbors","neighbourPoint","neighbors","push","getNeighborsOBJ","r","l","b","t","isNeighbors","axialPoint1","returnVal","i","length","equals","cloneObj","obj","o","constructor","Array","hasOwnProperty","GetRandomNum","minNum","maxNum","arguments","parseInt","random","inArray","arr","module","exports"],"mappings":"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","file":"Utils.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Utils","sourcesContent":["const utils    = {};\r\n\r\nvar rootThree = Math.sqrt(3);//square root of three\r\n\r\n\r\n\r\nutils.offsetToAxial = function(offsetPt) {\r\n\toffsetPt.x=(offsetPt.x-(Math.floor(offsetPt.y/2)));\r\n\treturn offsetPt;\r\n}\r\n\r\nutils.axialToScreen = function(axialPoint,sideLength) {\r\n\t// var tileY = rootThree*sideLength*(axialPoint.x+(axialPoint.y/2));\r\n\t// var tileX = 3 * sideLength/2*axialPoint.y;\r\n\r\n\tvar tileY = sideLength*axialPoint.y + sideLength*0.5 - axialPoint.y*lineWidth;\r\n\tvar tileX = sideLength*axialPoint.x + sideLength*0.5 - axialPoint.x*lineWidth;\r\n\t// cc.log(\"tileX:\",axialPoint.x,tileX)\r\n\r\n\t// return cc.v2(0,0);\r\n\treturn cc.v2(tileX,tileY);\r\n\t// axialPoint.x=tileX;\r\n\t// axialPoint.y=tileY;\r\n\t// return axialPoint;\r\n}\r\n\r\n/*\r\n * screen point to axial coordinate conversion\r\n * */\r\nutils.screenToAxial = function(screenPoint,sideLength)\r\n{\r\n\tvar axialPoint = cc.v2(0,0);\r\n\taxialPoint.y = screenPoint.x/(1.5*sideLength);\r\n\taxialPoint.x = (screenPoint.y-(screenPoint.x/rootThree))/(rootThree*sideLength);\r\n\r\n\tvar cubicZ = this.calculateCubicZ(axialPoint);\r\n\tvar round_x = Math.round(axialPoint.x);\r\n\tvar round_y = Math.round(axialPoint.y);\r\n\tvar round_z = Math.round(cubicZ);\r\n\r\n\tif(round_x+round_y+round_z==0){\r\n\t\tscreenPoint.x=round_x;\r\n\t\tscreenPoint.y=round_y;\r\n\t}else{\r\n\t\tvar delta_x = Math.abs(axialPoint.x-round_x);\r\n\t\tvar delta_y = Math.abs(axialPoint.y-round_y);\r\n\t\tvar delta_z = Math.abs(cubicZ-round_z);\r\n\t\t\r\n\t\tif(delta_x>delta_y && delta_x>delta_z){\r\n\t\t\tscreenPoint.x=-round_y-round_z;\r\n\t\t\tscreenPoint.y=round_y;\r\n\t\t}else if(delta_y>delta_x && delta_y>delta_z){\r\n\t\t\tscreenPoint.x=round_x;\r\n\t\t\tscreenPoint.y=-round_x-round_z;\r\n\t\t}else if(delta_z>delta_x && delta_z>delta_y){\r\n\t\t\tscreenPoint.x=round_x;\r\n\t\t\tscreenPoint.y=round_y;\r\n\t\t}\r\n\t}\r\n\treturn screenPoint;\r\n}\r\n\r\n/*\r\n * find the third value of the cubic coordinate with the logic that x+y+z=0\r\n * */\r\nutils.calculateCubicZ = function(newAxialPoint)\r\n{\r\n\treturn -newAxialPoint.x-newAxialPoint.y;\r\n}\r\n\r\n/*\r\n * axial coordinate to offset coordinate conversion\r\n * */\r\nutils.axialToOffset = function(axialPt){\r\n\taxialPt.x=(axialPt.x+(Math.floor(axialPt.y/2)));\r\n\treturn axialPt;\r\n}\r\n\r\n/*\r\n * find the neighbors as a list of axial points for the given axial coordinate\r\n * */\r\nutils.getNeighbors = function(axialPoint){//assign 6 neighbors\r\n\tvar neighbourPoint = cc.v2(0,0);\r\n\t\r\n\tvar neighbors = [];\r\n\r\n\tneighbourPoint.x = axialPoint.x+1;//right\r\n\tneighbourPoint.y = axialPoint.y;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x-1;//left\r\n\tneighbourPoint.y=axialPoint.y;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;//bottom\r\n\tneighbourPoint.y=axialPoint.y-1;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;\r\n\tneighbourPoint.y=axialPoint.y+1;//top\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\treturn neighbors;\r\n}\r\n\r\nutils.getNeighborsOBJ = function(axialPoint){\r\n\tvar neighbourPoint = cc.v2(0,0);\r\n\t\r\n\tvar neighbors = {};\r\n\r\n\tneighbourPoint.x = axialPoint.x+1;//right\r\n\tneighbourPoint.y = axialPoint.y;\r\n\tneighbors.r = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x-1;//left\r\n\tneighbourPoint.y=axialPoint.y;\r\n\tneighbors.l = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;//bottom\r\n\tneighbourPoint.y=axialPoint.y-1;\r\n\tneighbors.b = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;\r\n\tneighbourPoint.y=axialPoint.y+1;//top\r\n\tneighbors.t = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\treturn neighbors;\r\n}\r\n\r\n//是否相邻\r\nutils.isNeighbors = function(axialPoint,axialPoint1){\r\n\tvar neighbors = this.getNeighbors(axialPoint);\r\n\r\n\tvar returnVal = false;\r\n\tfor(var i = 0;i<neighbors.length;i++){\r\n\t\tif(neighbors[i].equals(axialPoint1)){\r\n\t\t\treturnVal = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnVal;\r\n\r\n}\r\n\r\n/**\r\n *深度clone对象\r\n */\r\nutils.cloneObj = function(obj) {\r\n    var o = (obj && obj.constructor===Array) ? [] : {};\r\n    for(var i in obj)\r\n    {\r\n        if(obj.hasOwnProperty(i))\r\n        {\r\n            if ( !obj[i] ) { o[i]=obj[i]; continue; }\r\n            o[i] = (typeof obj[i] === \"object\") ? utils.cloneObj(obj[i]) : obj[i];\r\n        }\r\n    }\r\n    return o;\r\n};\r\n\r\n//获取随机数\r\nutils.GetRandomNum = function(minNum, maxNum) {\r\n\r\n    switch(arguments.length){ \r\n        case 1: \r\n            return parseInt(Math.random()*minNum+1,10); \r\n        break; \r\n        case 2: \r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10); \r\n        break; \r\n            default: \r\n                return 0; \r\n            break; \r\n    } \r\n};\r\n\r\nutils.inArray = function (obj,arr) {\r\n\r\n  var i = arr.length;\r\n  while (i--) {\r\n    if (parseInt(arr[i]) === parseInt(obj)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = utils;\r\n"]}