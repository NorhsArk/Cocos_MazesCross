{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\SDK\\utils/assets\\Script\\SDK\\utils\\SDKUtils.js"],"names":["utils","rootThree","Math","sqrt","prefixInteger","num","length","Array","join","slice","offsetToAxial","offsetPt","x","floor","y","axialToScreen","axialPoint","sideLength","tileY","lineWidth","tileX","cc","v2","screenToAxial","screenPoint","abs","round","calculateCubicZ","newAxialPoint","axialToOffset","axialPt","getNeighbors","neighbourPoint","neighbors","push","getNeighborsOBJ","r","l","b","t","isNeighbors","axialPoint1","returnVal","i","equals","cloneObj","obj","o","constructor","hasOwnProperty","GetRandomNum","minNum","maxNum","arguments","parseInt","random","inArray","arr","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAW,EAAjB;;AAEA,IAAIC,YAAYC,KAAKC,IAAL,CAAU,CAAV,CAAhB,EAA6B;;;AAG7BH,MAAMI,aAAN,GAAsB,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC3C,QAAO,CAACC,MAAMD,MAAN,EAAcE,IAAd,CAAmB,GAAnB,IAA0BH,GAA3B,EAAgCI,KAAhC,CAAsC,CAACH,MAAvC,CAAP;AACA,CAFD;;AAKAN,MAAMU,aAAN,GAAsB,UAASC,QAAT,EAAmB;AACxCA,UAASC,CAAT,GAAYD,SAASC,CAAT,GAAYV,KAAKW,KAAL,CAAWF,SAASG,CAAT,GAAW,CAAtB,CAAxB;AACA,QAAOH,QAAP;AACA,CAHD;;AAKAX,MAAMe,aAAN,GAAsB,UAASC,UAAT,EAAoBC,UAApB,EAAgC;AACrD;AACA;;AAEA,KAAIC,QAAQD,aAAWD,WAAWF,CAAtB,GAA0BG,aAAW,GAArC,GAA2CD,WAAWF,CAAX,GAAaK,SAApE;AACA,KAAIC,QAAQH,aAAWD,WAAWJ,CAAtB,GAA0BK,aAAW,GAArC,GAA2CD,WAAWJ,CAAX,GAAaO,SAApE;AACA;;AAEA;AACA,QAAOE,GAAGC,EAAH,CAAMF,KAAN,EAAYF,KAAZ,CAAP;AACA;AACA;AACA;AACA,CAbD;;AAeA;;;AAGAlB,MAAMuB,aAAN,GAAsB,UAASC,WAAT,EAAqBP,UAArB,EACtB;AACC;AACA;;;AAGA,KAAID,aAAaK,GAAGC,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAjB;AACA,KAAIR,IAAIZ,KAAKuB,GAAL,CAASvB,KAAKwB,KAAL,CAAW,CAACF,YAAYV,CAAZ,GAAgBG,aAAW,GAA5B,IAAmCA,UAA9C,CAAT,CAAR;AACA,KAAIL,IAAIV,KAAKuB,GAAL,CAASvB,KAAKwB,KAAL,CAAW,CAACF,YAAYZ,CAAZ,GAAgBK,aAAW,GAA5B,IAAmCA,UAA9C,CAAT,CAAR;;AAEA;AACA;;AAEAD,YAAWJ,CAAX,GAAgBV,KAAKW,KAAL,CAAW,CAACW,YAAYZ,CAAZ,GAAiBA,IAAEO,SAApB,IAAiCF,UAA5C,CAAhB;AACAD,YAAWF,CAAX,GAAgBZ,KAAKW,KAAL,CAAW,CAACW,YAAYV,CAAZ,GAAiBA,IAAEK,SAApB,IAAiCF,UAA5C,CAAhB;;AAGA;;;AAGA,QAAOD,UAAP;AACA,CArBD;;AAuBA;;;AAGAhB,MAAM2B,eAAN,GAAwB,UAASC,aAAT,EACxB;AACC,QAAO,CAACA,cAAchB,CAAf,GAAiBgB,cAAcd,CAAtC;AACA,CAHD;;AAKA;;;AAGAd,MAAM6B,aAAN,GAAsB,UAASC,OAAT,EAAiB;AACtC;AACA,QAAOA,OAAP;AACA,CAHD;;AAKA;;;AAGA9B,MAAM+B,YAAN,GAAqB,UAASf,UAAT,EAAoB;AAAC;AACzC,KAAIgB,iBAAiBX,GAAGC,EAAH,CAAM,CAAN,EAAQ,CAAR,CAArB;;AAEA,KAAIW,YAAY,EAAhB;;AAEAD,gBAAepB,CAAf,GAAmBI,WAAWJ,CAAX,GAAa,CAAhC,CALwC,CAKN;AAClCoB,gBAAelB,CAAf,GAAmBE,WAAWF,CAA9B;AACAmB,WAAUC,IAAV,CAAeb,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAAX,GAAa,CAA9B,CATwC,CASR;AAChCoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAA5B;AACAmB,WAAUC,IAAV,CAAeb,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAA5B,CAbwC,CAaV;AAC9BoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAAX,GAAa,CAA9B;AACAmB,WAAUC,IAAV,CAAeb,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAA5B;AACAoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAAX,GAAa,CAA9B,CAlBwC,CAkBR;AAChCmB,WAAUC,IAAV,CAAeb,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEA,QAAOmB,SAAP;AACA,CAtBD;;AAwBAjC,MAAMmC,eAAN,GAAwB,UAASnB,UAAT,EAAoB;AAC3C,KAAIgB,iBAAiBX,GAAGC,EAAH,CAAM,CAAN,EAAQ,CAAR,CAArB;;AAEA,KAAIW,YAAY,EAAhB;;AAEAD,gBAAepB,CAAf,GAAmBI,WAAWJ,CAAX,GAAa,CAAhC,CAL2C,CAKT;AAClCoB,gBAAelB,CAAf,GAAmBE,WAAWF,CAA9B;AACAmB,WAAUG,CAAV,GAAef,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAAX,GAAa,CAA9B,CAT2C,CASX;AAChCoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAA5B;AACAmB,WAAUI,CAAV,GAAehB,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAA5B,CAb2C,CAab;AAC9BoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAAX,GAAa,CAA9B;AACAmB,WAAUK,CAAV,GAAejB,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEAkB,gBAAepB,CAAf,GAAiBI,WAAWJ,CAA5B;AACAoB,gBAAelB,CAAf,GAAiBE,WAAWF,CAAX,GAAa,CAA9B,CAlB2C,CAkBX;AAChCmB,WAAUM,CAAV,GAAelB,GAAGC,EAAH,CAAMU,eAAepB,CAArB,EAAuBoB,eAAelB,CAAtC,CAAf;;AAEA,QAAOmB,SAAP;AACA,CAtBD;;AAwBA;AACAjC,MAAMwC,WAAN,GAAoB,UAASxB,UAAT,EAAoByB,WAApB,EAAgC;AACnD,KAAIR,YAAY,KAAKF,YAAL,CAAkBf,UAAlB,CAAhB;;AAEA,KAAI0B,YAAY,KAAhB;AACA,MAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAEV,UAAU3B,MAA1B,EAAiCqC,GAAjC,EAAqC;AACpC,MAAGV,UAAUU,CAAV,EAAaC,MAAb,CAAoBH,WAApB,CAAH,EAAoC;AACnCC,eAAY,IAAZ;AACA;AACD;;AAED,QAAOA,SAAP;AAEA,CAZD;;AAcA;;;AAGA1C,MAAM6C,QAAN,GAAiB,UAASC,GAAT,EAAc;AAC3B,KAAIC,IAAKD,OAAOA,IAAIE,WAAJ,KAAkBzC,KAA1B,GAAmC,EAAnC,GAAwC,EAAhD;AACA,MAAI,IAAIoC,CAAR,IAAaG,GAAb,EACA;AACI,MAAGA,IAAIG,cAAJ,CAAmBN,CAAnB,CAAH,EACA;AACI,OAAK,CAACG,IAAIH,CAAJ,CAAN,EAAe;AAAEI,MAAEJ,CAAF,IAAKG,IAAIH,CAAJ,CAAL,CAAa;AAAW;AACzCI,KAAEJ,CAAF,IAAQ,QAAOG,IAAIH,CAAJ,CAAP,MAAkB,QAAnB,GAA+B3C,MAAM6C,QAAN,CAAeC,IAAIH,CAAJ,CAAf,CAA/B,GAAwDG,IAAIH,CAAJ,CAA/D;AACH;AACJ;AACD,QAAOI,CAAP;AACH,CAXD;;AAaA;AACA/C,MAAMkD,YAAN,GAAqB,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;;AAE1C,SAAOC,UAAU/C,MAAjB;AACI,OAAK,CAAL;AACI,UAAOgD,SAASpD,KAAKqD,MAAL,KAAcJ,MAAd,GAAqB,CAA9B,EAAgC,EAAhC,CAAP;AACJ;AACA,OAAK,CAAL;AACI,UAAOG,SAASpD,KAAKqD,MAAL,MAAeH,SAAOD,MAAP,GAAc,CAA7B,IAAgCA,MAAzC,EAAgD,EAAhD,CAAP;AACJ;AACI;AACI,UAAO,CAAP;AACJ;AATR;AAWH,CAbD;;AAeAnD,MAAMwD,OAAN,GAAgB,UAAUV,GAAV,EAAcW,GAAd,EAAmB;;AAEjC,KAAId,IAAIc,IAAInD,MAAZ;AACA,QAAOqC,GAAP,EAAY;AACV,MAAIW,SAASG,IAAId,CAAJ,CAAT,MAAqBW,SAASR,GAAT,CAAzB,EAAwC;AACtC,UAAO,IAAP;AACD;AACF;AACD,QAAO,KAAP;AACD,CATD;;AAWAY,OAAOC,OAAP,GAAiB3D,KAAjB","file":"SDKUtils.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\SDK\\utils","sourcesContent":["const utils    = {};\r\n\r\nvar rootThree = Math.sqrt(3);//square root of three\r\n\r\n\r\nutils.prefixInteger = function(num, length) {\r\n return (Array(length).join('0') + num).slice(-length);\r\n}\r\n\r\n\r\nutils.offsetToAxial = function(offsetPt) {\r\n\toffsetPt.x=(offsetPt.x-(Math.floor(offsetPt.y/2)));\r\n\treturn offsetPt;\r\n}\r\n\r\nutils.axialToScreen = function(axialPoint,sideLength) {\r\n\t// var tileY = rootThree*sideLength*(axialPoint.x+(axialPoint.y/2));\r\n\t// var tileX = 3 * sideLength/2*axialPoint.y;\r\n\r\n\tvar tileY = sideLength*axialPoint.y + sideLength*0.5 - axialPoint.y*lineWidth ;\r\n\tvar tileX = sideLength*axialPoint.x + sideLength*0.5 - axialPoint.x*lineWidth ;\r\n\t// cc.log(\"tileX:\",axialPoint.x,tileX)\r\n\r\n\t// return cc.v2(0,0);\r\n\treturn cc.v2(tileX,tileY);\r\n\t// axialPoint.x=tileX;\r\n\t// axialPoint.y=tileY;\r\n\t// return axialPoint;\r\n}\r\n\r\n/*\r\n * screen point to axial coordinate conversion\r\n * */\r\nutils.screenToAxial = function(screenPoint,sideLength)\r\n{\r\n\t// cc.log(\"screenPoint:\",screenPoint)\r\n\t// cc.log(\"sideLength:\",sideLength)\r\n\r\n\r\n\tvar axialPoint = cc.v2(0,0);\r\n\tvar y = Math.abs(Math.round((screenPoint.y - sideLength*0.5) / sideLength ));\r\n\tvar x = Math.abs(Math.round((screenPoint.x - sideLength*0.5) / sideLength ));\r\n\r\n\t// console.log(\"xxxxx\",(screenPoint.x  + x*lineWidth) / sideLength)\r\n\t// console.log(\"y:\",y)\r\n\r\n\taxialPoint.x = (Math.floor((screenPoint.x  + x*lineWidth) / sideLength ));\r\n\taxialPoint.y = (Math.floor((screenPoint.y  + y*lineWidth) / sideLength ));\r\n\r\n\r\n\t// cc.log(\"axialPoint:\",axialPoint)\r\n\r\n\r\n\treturn axialPoint;\r\n}\r\n\r\n/*\r\n * find the third value of the cubic coordinate with the logic that x+y+z=0\r\n * */\r\nutils.calculateCubicZ = function(newAxialPoint)\r\n{\r\n\treturn -newAxialPoint.x-newAxialPoint.y;\r\n}\r\n\r\n/*\r\n * axial coordinate to offset coordinate conversion\r\n * */\r\nutils.axialToOffset = function(axialPt){\r\n\t// axialPt.x=(axialPt.x+(Math.floor(axialPt.y/2)));\r\n\treturn axialPt;\r\n}\r\n\r\n/*\r\n * find the neighbors as a list of axial points for the given axial coordinate\r\n * */\r\nutils.getNeighbors = function(axialPoint){//assign 6 neighbors\r\n\tvar neighbourPoint = cc.v2(0,0);\r\n\t\r\n\tvar neighbors = [];\r\n\r\n\tneighbourPoint.x = axialPoint.x+1;//right\r\n\tneighbourPoint.y = axialPoint.y;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x-1;//left\r\n\tneighbourPoint.y=axialPoint.y;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;//bottom\r\n\tneighbourPoint.y=axialPoint.y-1;\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;\r\n\tneighbourPoint.y=axialPoint.y+1;//top\r\n\tneighbors.push(cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\treturn neighbors;\r\n}\r\n\r\nutils.getNeighborsOBJ = function(axialPoint){\r\n\tvar neighbourPoint = cc.v2(0,0);\r\n\t\r\n\tvar neighbors = {};\r\n\r\n\tneighbourPoint.x = axialPoint.x+1;//right\r\n\tneighbourPoint.y = axialPoint.y;\r\n\tneighbors.r = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x-1;//left\r\n\tneighbourPoint.y=axialPoint.y;\r\n\tneighbors.l = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;//bottom\r\n\tneighbourPoint.y=axialPoint.y-1;\r\n\tneighbors.b = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\tneighbourPoint.x=axialPoint.x;\r\n\tneighbourPoint.y=axialPoint.y+1;//top\r\n\tneighbors.t = (cc.v2(neighbourPoint.x,neighbourPoint.y));\r\n\r\n\treturn neighbors;\r\n}\r\n\r\n//是否相邻\r\nutils.isNeighbors = function(axialPoint,axialPoint1){\r\n\tvar neighbors = this.getNeighbors(axialPoint);\r\n\r\n\tvar returnVal = false;\r\n\tfor(var i = 0;i<neighbors.length;i++){\r\n\t\tif(neighbors[i].equals(axialPoint1)){\r\n\t\t\treturnVal = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnVal;\r\n\r\n}\r\n\r\n/**\r\n *深度clone对象\r\n */\r\nutils.cloneObj = function(obj) {\r\n    var o = (obj && obj.constructor===Array) ? [] : {};\r\n    for(var i in obj)\r\n    {\r\n        if(obj.hasOwnProperty(i))\r\n        {\r\n            if ( !obj[i] ) { o[i]=obj[i]; continue; }\r\n            o[i] = (typeof obj[i] === \"object\") ? utils.cloneObj(obj[i]) : obj[i];\r\n        }\r\n    }\r\n    return o;\r\n};\r\n\r\n//获取随机数\r\nutils.GetRandomNum = function(minNum, maxNum) {\r\n\r\n    switch(arguments.length){ \r\n        case 1: \r\n            return parseInt(Math.random()*minNum+1,10); \r\n        break; \r\n        case 2: \r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10); \r\n        break; \r\n            default: \r\n                return 0; \r\n            break; \r\n    } \r\n};\r\n\r\nutils.inArray = function (obj,arr) {\r\n\r\n  var i = arr.length;\r\n  while (i--) {\r\n    if (parseInt(arr[i]) === parseInt(obj)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = utils;\r\n"]}